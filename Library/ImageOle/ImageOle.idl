// ImageOle.idl : ImageOle 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(ImageOle.tlb)和封送处理代码。

#include "olectl.h"
import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(a817e7a2-43fa-11d0-9e44-00aa00b6770a),
	dual,
	helpstring("IComponentRegistrar 接口"),
	pointer_default(unique)
]
interface IComponentRegistrar : IDispatch
{
	[id(1)]	HRESULT Attach([in] BSTR bstrPath);
	[id(2)]	HRESULT RegisterAll();
	[id(3)]	HRESULT UnregisterAll();
	[id(4)]	HRESULT GetComponents([out] SAFEARRAY(BSTR)* pbstrCLSIDs, [out] SAFEARRAY(BSTR)* pbstrDescriptions);
	[id(5)]	HRESULT RegisterComponent([in] BSTR bstrCLSID);
	[id(6)] HRESULT UnregisterComponent([in] BSTR bstrCLSID);
};

[
	object,
	uuid(BEC6387B-2315-453D-974D-BB75E6C6F7AB),
	dual,
	nonextensible,
	helpstring("IRichEditImageOle 接口"),
	pointer_default(unique)
]
interface IRichEditImageOle : IDispatch{
	[id(1), helpstring("方法LoadFileFromPath")] HRESULT LoadFileFromPath([in] BSTR lpszFilePath, [in] UINT nMaxWidth);
};

[
	uuid(A239D61C-EFA7-4880-A446-69C62ADE9C6B),
	version(1.0),
	helpstring("ImageOle 1.0 类型库"),
	custom(a817e7a1-43fa-11d0-9e44-00aa00b6770a,"{699286B3-FFA7-492A-8197-24B6752F7434}")
]
library ImageOleLib
{
	importlib("stdole2.tlb");

	[
		uuid(699286B3-FFA7-492A-8197-24B6752F7434),
		helpstring("ComponentRegistrar 类")
	]
	coclass CompReg
	{
		[default] interface IComponentRegistrar;
	};
	[
		uuid(7DEE7780-A720-4905-BFC8-312BF8CE4BD4),
		helpstring("_IRichEditImageOleEvents 接口")
	]
	dispinterface _IRichEditImageOleEvents
	{
		properties:
		methods:
	};
	[
		uuid(4E37008B-3613-4A86-87D8-2291CEED108E),
		control,
		helpstring("RichEditImageOle Class")
	]
	coclass RichEditImageOle
	{
		[default] interface IRichEditImageOle;
		[default, source] dispinterface _IRichEditImageOleEvents;
	};
};
