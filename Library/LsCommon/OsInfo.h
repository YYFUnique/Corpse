#pragma once
#include "SystemInfo/GlobalInfo.h"

#ifdef LS_STATIC_LIB_CALL
#define LS_COMMON_API 
#elif defined  LS_EXPORTS
#define LS_COMMON_API __declspec(dllexport)
#else
#define LS_COMMON_API __declspec(dllimport)
#endif

#include <shlwapi.h>
#pragma comment(lib,"shlwapi.lib")

/************************************************************************/
/* 函数名称：IsWow64Process                                                        */
/* 函数功能：判断运行当前程序的系统是否是64位操作系统				*/
/* 参      数：无输入参数																	*/
/* 返  回 值：如果是64位操作系统返回TRUE，否则返回FALSE			*/
/************************************************************************/
LS_COMMON_API BOOL IsWow64Process();

/************************************************************************/
/* 函数名称：GetSystemProductName                                           */
/* 函数功能：获取操作系统的产品名称，如Windows 7 Ultimate		*/
/* 参      数：无输入参数																	*/
/* 返  回 值：如果获取成功返回产品名称，否知返回空						*/
/************************************************************************/
LS_COMMON_API CString GetSystemName();

//////////////////////////////////////////////////////////////////////////////////////
// 函数名称：GetSystemDirectoryEx                                           
// 函数功能：获取系统目录如C:\Windows\System32
// 参      数：lpszFileName	系统目录下面的文件名
// 返  回 值：如果获取成功返回产品名称，否知返回空						
//////////////////////////////////////////////////////////////////////////////////////
LS_COMMON_API CString GetSystemDirectoryEx(LPCTSTR lpszFileName);

//////////////////////////////////////////////////////////////////////////////////////
// 函数名称：GetWindowsDirectoryEx                                           
// 函数功能：获取操作系统所在目录
// 参      数：无
// 返  回 值：如果获取成功返回产品名称，否知返回空						
//////////////////////////////////////////////////////////////////////////////////////
LS_COMMON_API CString GetWindowsDirectoryEx();

/************************************************************************/
/* 函数名称：OsIsServer                                                                 */
/* 函数功能：判断当前系统是否是服务器系统									*/
/* 参      数：无输入参数																    */
/* 返  回 值：如果是服务器则返回TRUE，否知返回FALSE					*/
/************************************************************************/
LS_COMMON_API BOOL OsIsServer();

/************************************************************************/
/* 函数名称：GetComputerName                                                   */
/* 函数功能：获取计算机的显示名称													*/
/* 参      数：无输入参数																	*/
/* 返 回  值：如果获取成功则返回计算机名称，否则返回_T("")			*/
/************************************************************************/
LS_COMMON_API CString GetComputerName();

/************************************************************************/
//函数名称：GetUserName
//函数功能：获取用户名
//返 回  值：返回用户名
/************************************************************************/
LS_COMMON_API CString GetUserName();
/************************************************************************/
/* 函数名称：AfxGetScreenSize		                                                   */
/* 函数功能：获取计算机的屏幕分辨率												*/
/* 参      数：_OUT pdwScreenSize 返回由屏幕宽高组合的整数			*/
/* 返 回  值：如果获取成功则返回宽x高的字符串								*/
/************************************************************************/
LS_COMMON_API DWORD AfxGetScreenSize();

/************************************************************************/
//函数名称：GetScreenSize
//函数功能：获取屏幕分辨率
//参       数：dwScreen 屏幕大小的值
//					lpszSymbol 连接符号
//返 回  值：中央处理器信息
/************************************************************************/
LS_COMMON_API CString GetScreenSize(DWORD dwScreen,LPCTSTR lpszSymbol = _T("x"));

/************************************************************************/
//函数名称：GetCpuInfo
//函数功能：获取中央处理器信息
//参       数：无
//返 回  值：中央处理器信息
/************************************************************************/
LS_COMMON_API CString GetCpuInfo();

/************************************************************************/
//函数名称：AfxGetTotalMem
//函数功能：获取系统可用内存
//参数：
//				  pdwTotalMem 获取可用内存大小
//				  bGetInstall		 是否获取安装内存大小，如果为FALSE，则第三个参数无用
//				  pdwInstallMem 获取系统的安装内存大小
/************************************************************************/
LS_COMMON_API BOOL AfxGetTotalMem(PDWORD pdwTotalMem,BOOL bGetInstall = FALSE,PDWORD pdwInstallMem = 0);

/************************************************************************/
//函数名称：AfxGetTotalMem
//函数功能：获取系统的内存大小
//参       数：无
//返 回  值：返回系统内存大小
/************************************************************************/
LS_COMMON_API DWORD AfxGetTotalMem();

/************************************************************************/
//函数名称：GetCameraInfo
//函数功能：获取计算机是否有摄像头的描述
//参       数：无
//返 回  值：CAMERA_INFO枚举类型
/************************************************************************/
LS_COMMON_API CAMERA_INFO GetCameraInfo();

/************************************************************************/
//函数名称：GetCameraDescribeInfo
//函数功能：获取计算机是否有摄像头的描述
//参       数：CameraInfo CAMERA_INFO枚举类型
//返 回  值：返回描述内容
/************************************************************************/
LS_COMMON_API CString GetCameraDescribeInfo(int CameraInfo);

/************************************************************************/
//函数名称：GetServerPack
//函数功能：获取操作系统的Server Pack补丁号
//参       数：	无
//返 回  值：如果执行成功返回TRUE
/************************************************************************/
LS_COMMON_API DWORD GetServerPack();

/************************************************************************/
//函数名称：RestartOperatSystem
//函数功能：重新启动操作系统
//参       数：	无
//返 回   值：如果执行成功返回TRUE
/************************************************************************/
LS_COMMON_API BOOL RestartOperatSystem();

/************************************************************************/
//函数名称：OsIsVistaOrLater
//函数功能：当前系统是否是Vista及以后系统
//参数：	无
//返回值：如果是Vista或以后系统则返回TRUE
/************************************************************************/
LS_COMMON_API BOOL OsIsVistaOrLater();

/************************************************************************/
//函数名称：GetWin32_OperatingSystemByWMI
//函数功能：获取操作系统信息
//参数：	获取信息字段
//				OsType保存获取到的数据
//返回值：获取成功返回TRUE，失败返回FALSE
/************************************************************************/
LS_COMMON_API BOOL GetWin32_OperatingSystemByWMI(LPCTSTR lpszColumnName,CString& OsType);

LS_COMMON_API BOOL GetLogicalDriveStrings(CStringArray& strDriverStrings);