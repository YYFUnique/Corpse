// Animator.idl : Animator 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(Animator.tlb)和封送处理代码。

#include "olectl.h"
#include "olectl.h"
import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(7F891C05-3991-4F27-B50E-40CBEFB8849A),
	dual,
	nonextensible,
	helpstring("ICOleImage 接口"),
	pointer_default(unique)
]
interface ICOleImage : IDispatch{
};

[
	object,
	uuid(7CDE1B04-1910-40C3-9E1B-E7AF1BA6E20F),
	dual,
	nonextensible,
	helpstring("IImageOle 接口"),
	pointer_default(unique)
]
interface IImageOle : IDispatch{
};

[
	uuid(FB0899FE-A666-4481-B1EE-F285351957B6),
	version(1.0),
	helpstring("Animator 1.0 类型库")
]
library AnimatorLib
{
	importlib("stdole2.tlb");
	[
		uuid(40AFEFEB-3CBA-4B84-9799-91A81703BAB7),
		helpstring("_ICOleImageEvents 接口")
	]
	dispinterface _ICOleImageEvents
	{
		properties:
		methods:
	};
	[
		uuid(02AA7116-DD46-4360-8304-832B99196591),
		control,
		helpstring("COleImage Class")
	]
	coclass COleImage
	{
		[default] interface ICOleImage;
		[default, source] dispinterface _ICOleImageEvents;
	};
	[
		uuid(2D2291BB-83E2-482A-B41A-EFF8B2D7A296),
		helpstring("_IImageOleEvents 接口")
	]
	dispinterface _IImageOleEvents
	{
		properties:
		methods:
	};
	[
		uuid(2AE9BB9C-3ADE-4091-8D6F-96BD82E598D5),
		control,
		helpstring("ImageOle Class")
	]
	coclass ImageOle
	{
		[default] interface IImageOle;
		[default, source] dispinterface _IImageOleEvents;
	};
};
